#
# Copyright 2024 The Dapr Authors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

name: Create a release

on:
  workflow_dispatch:
    inputs:
      rel_version:
        description: 'Release version (examples: 1.9.0-rc-1, 1.9.1, 1.11.0-SNAPSHOT)'
        required: true
        type: string

jobs:
  create-release:
    name: Creates release branch and tag
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install required packages
        run: |
          sudo apt-get update
          sudo apt-get install pcre2-utils
      - name: Create release branch and tag
        env:
          GITHUB_TOKEN: ${{ secrets.DAPR_BOT_TOKEN }}
        run: |
          git config user.email "daprweb@microsoft.com"
          git config user.name "Dapr Bot"
          # Update origin with token
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          # Copy first to allow automation to use the latest version and not the release branch's version.
          cp -R ./.github/scripts ${RUNNER_TEMP}/
          ${RUNNER_TEMP}/scripts/create-release.sh ${{ inputs.rel_version }}
  trigger:
    name: Triggers the Dapr SDK build
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Triggers the build
        env:
          GITHUB_TOKEN: ${{ secrets.DAPR_BOT_TOKEN }}
        run: |
          gh workflow run build.yml --repo ${GITHUB_REPOSITORY} --ref v$(echo '${{ inputs.rel_version }}' | sed -r 's/^[vV]?([0-9].+)$/\1/')