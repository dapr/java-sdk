# Copyright 2021 The Dapr Authors
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#     http://www.apache.org/licenses/LICENSE-2.0
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Auto Validate Examples

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - release-*
    tags:
      - v*

  pull_request:
    branches:
    - master
    - release-*
jobs:
  validate:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ 11, 13, 15, 16 ]
    env:
      GOVER: 1.17.7
      GOOS: linux
      GOARCH: amd64
      GOPROXY: https://proxy.golang.org
      JDK_VER: ${{ matrix.java }}
      DAPR_CLI_VER: 1.7.0-rc.2
      DAPR_RUNTIME_VER: 1.7.0-rc.2
      DAPR_INSTALL_URL: https://raw.githubusercontent.com/dapr/cli/v1.7.0-rc.2/install/install.sh
      DAPR_CLI_REF:
      DAPR_REF: 4cf499448ef6ee87c83db6a11b84e83237e92665
    steps:
      - uses: actions/checkout@v3
      - name: Set up OpenJDK ${{ env.JDK_VER }}
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: ${{ env.JDK_VER }}
      - name: Set up Dapr CLI
        run: wget -q ${{ env.DAPR_INSTALL_URL }} -O - | /bin/bash -s ${{ env.DAPR_CLI_VER }}
      - name: Set up Go ${{ env.GOVER }}
        if: env.DAPR_REF != '' || env.DAPR_CLI_REF != ''
        uses: actions/setup-go@v2
        with:
          go-version: ${{ env.GOVER }}
      - name: Checkout Dapr CLI repo to override dapr command.
        uses: actions/checkout@v3
        if: env.DAPR_CLI_REF != ''
        with:
          repository: dapr/cli
          ref: ${{ env.DAPR_CLI_REF }}
          path: cli
      - name: Checkout Dapr repo to override daprd.
        uses: actions/checkout@v3
        if: env.DAPR_REF != ''
        with:
          repository: dapr/dapr
          ref: ${{ env.DAPR_REF }}
          path: dapr
      - name: Build and override dapr cli with referenced commit.
        if: env.DAPR_CLI_REF != ''
        run: |
          cd cli
          make
          sudo cp dist/linux_amd64/release/dapr /usr/local/bin/dapr
          cd ..
      - name: Initialize Dapr runtime ${{ env.DAPR_RUNTIME_VER }}
        run: |
          dapr uninstall --all
          dapr init --runtime-version ${{ env.DAPR_RUNTIME_VER }}
      - name: Build and override daprd with referenced commit.
        if: env.DAPR_REF != ''
        run: |
          cd dapr
          make
          mkdir -p $HOME/.dapr/bin/
          cp dist/linux_amd64/release/daprd $HOME/.dapr/bin/daprd
          cd ..
      - name: Override placement service.
        if: env.DAPR_REF != ''
        run: |
          docker stop dapr_placement
          cd dapr
          ./dist/linux_amd64/release/placement &
      - name: Install utilities dependencies
        run: |
          echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV
          pip3 install setuptools wheel
          pip3 install mechanical-markdown
      - name: Install Vault CLI
        run: |
          # From the installtion page of vault https://learn.hashicorp.com/tutorials/vault/getting-started-install?in=vault/getting-started
          curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
          sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
          sudo apt-get update
          sudo apt-get install vault
          # Verify vault is installed
          vault -h
      - name: Install Local mongo database using docker-compose
        run: |
          docker-compose -f ./sdk-tests/deploy/local-test-mongo.yml up -d
          docker ps
      - name: Clean up files
        run: mvn clean
      - name: Build sdk
        run: mvn compile -q
      - name: Install jars
        run: mvn install -q
      - name: Validate invoke http example
        working-directory: ./examples
        run: |
          mm.py ./src/main/java/io/dapr/examples/invoke/http/README.md
      - name: Validate invoke grpc example
        working-directory: ./examples
        run: |
          mm.py ./src/main/java/io/dapr/examples/invoke/grpc/README.md
      - name: Validate tracing example
        working-directory: ./examples
        run: |
          mm.py ./src/main/java/io/dapr/examples/tracing/README.md
      - name: Validate expection handling example
        working-directory: ./examples
        run: |
          mm.py ./src/main/java/io/dapr/examples/exception/README.md
      - name: Validate state example
        working-directory: ./examples
        run: |
          mm.py ./src/main/java/io/dapr/examples/state/README.md
      - name: Validate pubsub HTTP example
        working-directory: ./examples
        run: |
          mm.py ./src/main/java/io/dapr/examples/pubsub/http/README.md
      - name: Validate bindings HTTP example
        working-directory: ./examples
        run: |
          mm.py ./src/main/java/io/dapr/examples/bindings/http/README.md
      - name: Validate secrets example
        working-directory: ./examples
        run: |
          mm.py ./src/main/java/io/dapr/examples/secrets/README.md
      - name: Validate unit testing example
        working-directory: ./examples
        run: |
          mm.py ./src/main/java/io/dapr/examples/unittesting/README.md
      - name: Validate Configuration API example
        working-directory: ./examples
        run: |
            mm.py ./src/main/java/io/dapr/examples/configuration/grpc/README.md
      - name: Validate query state HTTP example
        working-directory: ./examples
        run: |
            mm.py ./src/main/java/io/dapr/examples/querystate/README.md